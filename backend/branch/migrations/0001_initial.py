# Generated by Django 5.1.3 on 2024-11-24 19:32

import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(default='no-slug', max_length=200)),
                ('province_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=200, verbose_name='نام مارکت')),
                ('province', models.CharField(max_length=200, verbose_name='استان')),
                ('city', models.CharField(max_length=200, verbose_name='شهر')),
                ('village', models.CharField(blank=True, max_length=200, null=True, verbose_name='روستا')),
                ('market_sheba', models.CharField(max_length=22, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='شماره شبا صحیح نیست', regex='^\\d{22}$')], verbose_name='شماره شبا')),
                ('sheba_owner_name', models.CharField(max_length=200, verbose_name='نام و نام خانوادگی صاحب شبا')),
                ('landline_phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='شماره تلفن صحیح نیست', regex='^\\d{11}$')], verbose_name='تلفن ثابت')),
                ('main_street', models.CharField(max_length=200, verbose_name='خیابان اصلی')),
                ('rest_address', models.CharField(max_length=500, verbose_name='بقیه ادرس')),
                ('latitude', models.DecimalField(decimal_places=30, max_digits=60)),
                ('longitude', models.DecimalField(decimal_places=30, max_digits=60)),
                ('market_type', models.CharField(choices=[('mo', 'مارکت اول'), ('mt', 'مارکت دوم'), ('mh', 'مارکت سوم')], max_length=2)),
                ('confirmed_person_national_code', models.CharField(max_length=10, verbose_name='کد ملی تایید کننده')),
                ('is_confirmed_by_admin', models.BooleanField(default=False, verbose_name='تایید شده توسط ادمین')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('confirmed_date', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ تایید ادمین')),
            ],
        ),
        migrations.CreateModel(
            name='MarketFeature1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('b', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('c', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('d', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('e', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('f', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('g', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('h', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('i', models.BooleanField()),
                ('j', models.BooleanField()),
                ('k', models.BooleanField()),
                ('l', models.BooleanField()),
                ('ml', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarketManagers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='شماره تلفن صحیح نیست', regex='^\\d{11}$')])),
                ('national_code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='شماره ملی صحیح نیست', regex='^\\d{10}$')])),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('user_type', models.CharField(blank=True, choices=[('mco', 'مسئول مارکت اول')], max_length=5, null=True)),
                ('phone_confirmed', models.BooleanField(default=False, verbose_name='تایید شده توسط ادمین')),
                ('employee_market_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MarketOneTimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('شنبه', 'شنبه'), ('یکشنبه', 'یکشنبه'), ('دوشنبه', 'دوشنبه'), ('سه\u200cشنبه', 'سه\u200cشنبه'), ('چهارشنبه', 'چهارشنبه'), ('پنج\u200cشنبه', 'پنج\u200cشنبه'), ('جمعه', 'جمعه')], max_length=20, verbose_name='روز هفته')),
                ('start_time', models.TimeField(verbose_name='ساعت شروع')),
                ('end_time', models.TimeField(verbose_name='ساعت پایان')),
                ('cost_multiplier', models.FloatField(default=1.0, verbose_name='ضریب هزینه')),
            ],
            options={
                'verbose_name': 'بازه زمانی مارکت اول',
                'verbose_name_plural': 'بازه\u200cهای زمانی مارکت های اول',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('tel_prefix', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SmsBodyId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sms_panel_username', models.CharField(max_length=200)),
                ('sms_panel_password', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('body_id', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'اطلاعات پنل پیامکی',
                'verbose_name_plural': 'اطلاعات پنلهای پیامکی',
            },
        ),
        migrations.CreateModel(
            name='MarketFeature2',
            fields=[
                ('market_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='branch.market')),
                ('n', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000000)])),
                ('m', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(40)])),
                ('info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='market_one', to='branch.marketfeature1')),
            ],
            bases=('branch.market',),
        ),
        migrations.CreateModel(
            name='MarketImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='market/images')),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='branch.market')),
            ],
        ),
        migrations.AddField(
            model_name='market',
            name='first_manager',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_one', to='branch.marketmanagers', verbose_name='مسئول مارکت'),
        ),
        migrations.AddField(
            model_name='market',
            name='second_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='market_two', to='branch.marketmanagers'),
        ),
        migrations.CreateModel(
            name='MarketReserved',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('timeSlot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='branch.marketonetimeslot')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='شماره تلفن صحیح نیست', regex='^\\d{11}$')], verbose_name='شماره تلفن')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='نام')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='نام خانوادگی')),
                ('national_code', models.CharField(max_length=10, verbose_name='کد ملی')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='branch.city', verbose_name='شهر')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='branch.province', verbose_name='استان')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='marketonetimeslot',
            name='market1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='branch.marketfeature2', verbose_name='مارکت اول'),
        ),
        migrations.AddField(
            model_name='marketmanagers',
            name='market',
            field=models.ManyToManyField(blank=True, related_name='users', to='branch.marketfeature2'),
        ),
        migrations.AlterUniqueTogether(
            name='marketonetimeslot',
            unique_together={('market1', 'day_of_week', 'start_time', 'end_time')},
        ),
        migrations.AlterUniqueTogether(
            name='marketmanagers',
            unique_together={('phone_number', 'user_type', 'employee_market_id')},
        ),
    ]
